var Ext = {
    global: global,

    Array: {
        slice: function(array) {
            return Array.prototype.slice.call(array);
        }
    },
    Function: {
        memoize: function() {
            console.error('memoize called');
        }
    },

    asap: setImmediate,

    emptyFn: function() {},

    isArray: function(array) {
        return Array.isArray(array);
    },
    isFunction: function(fn) {
        return fn && typeof fn === 'function';
    },
    isNumeric: function(number) {
        return typeof number === 'number';
    },
    isObject: function(obj) {
        return obj && typeof obj === 'object';
    },

    raise: function(msg) {
        throw new Error(msg);
    },

    classes: {},

    require: function(className) {
        if (!Ext.classes[className]) {
            Ext.classes[className] = true;
            var path = className.substring(4).replace(/\./g, '/');

            require('../../src/' + path + '.js');
        }
    },

    define: function(className, body, done) {
        // console.log('>> Ext.define ' + className);

        function constructor() {
            return this.constructor.apply(this, arguments);
        }

        if (typeof body === 'function') {
            body = body(constructor);
        }

        if (body.extend) {
            Ext.require(body.extend);
            var base = eval(body.extend);

            constructor.prototype = Object.create(base.prototype);
        }
        else {
            constructor.prototype = body;
        }

        if (body.requires) {
            body.requires.forEach(function(req) {
                Ext.require(req);
            });
        }

        body.self = constructor;

        var name;

        var statics = body.statics;

        if (statics) {
            delete body.statics;

            for (name in statics) {
                // console.log('Adding static ' + className + '#' + name);
                constructor[name] = statics[name];
            }
        }

        var parts = className.split('.');

        var end = parts.length - 1;

        var ns = Ext;

        for (var i = 1; i < end; ++i) {
            name = parts[i];

            if (!ns[name]) {
                ns[name] = {};
            }

            ns = ns[name];
        }

        ns[parts[end]] = constructor;

        if (done) {
            done.call(constructor, constructor);
        }

        // console.log('<< Ext.define ' + className);
        return constructor;
    }
};

global.Ext = Ext;

module.exports = {
    Ext: Ext
};
